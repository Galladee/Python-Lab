def fib(a):
    b, c = 0, 1
    fib_sequence = []
    for _ in range(a):
        fib_sequence.append(b)
        b, c = c, b + c
    return fib_sequence
def square(x):
    return x ** 2
a = 10  
b = fib(a) 
c = list(map(square, b)) 
print("First", a, "Fibonacci numbers:", b)
print("Squares of Fibonacci numbers:", c)




def compute_sum(arr):
    return sum(map(int, arr))
arr = ['1', '2', '3', '4', '5'] 
result = compute_sum(arr)
print("Sum of elements:", result)




def triple(x):
    return x * 3
numbers = [1, 2, 3, 4, 5]
tripled_numbers = list(map(triple, numbers))
print(tripled_numbers)



list1 = [1, 2, 3]
list2 = [4, 5, 6]
list3 = [7, 8, 9]
result = list(map(lambda x, y, z: x + y + z, list1, list2, list3))
print("Resulting list after addition:", result)



def power(number, length):
    results = []
    
    for i in range(length):
        base = i + 1
        pow = base ** number
        results.append(pow)
    
    return results

if __name__ == "__main__":
    num = int(input("Enter a number: "))
    length = int(input("Enter the length of the list: "))
    pow = pow(num, length)
    print("List of powers:", power)



def convert_and_remove_duplicates(sequence):
    lower= set(map(str.lower, sequence))
    upper= set(map(str.upper, sequence))
    return lower, upper
sequence = "HelloWorld"
lower, upper = convert_and_remove_duplicates(sequence)
print("Unique lowercase characters:", lower)
print("Unique uppercase characters:", upper)



def convert_to_strings(lst, tpl):
    lst_strings = list(map(str, lst))
    tpl_strings = list(map(str, tpl))
    return lst_strings, tpl_strings
lst = [1, 2, 3, 4]
tpl = (5, 6, 7, 8)
lst_strings, tpl_strings = convert_to_strings(lst, tpl)
print("List of strings:", lst_strings)
print("Tuple of strings:", tpl_strings)





def get_elements(t, i):
    return [t[x] for x in i]
def str_to_int(s):
    return int(s)
t = (10, 20, 30, 40, 50)
i = [1, 3]
s = "123"
lst = get_elements(t, i)
n = str_to_int(s)
print("New list:", lst)
print("Converted integer:", n)




